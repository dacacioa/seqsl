name: Build Workflow

on:
  push:
    branches:
      - main  # O la rama en la que deseas activar el flujo

jobs:
  build-windows:
    runs-on: windows-2019

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check Commit Message for Version Tag
        id: check_version
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is_version=true" >> $GITHUB_ENV
          else
            echo "is_version=false" >> $GITHUB_ENV
          fi

      - name: Stop if No Version Tag in Commit
        if: env.is_version == 'false'
        run: |
          echo "Commit message does not contain a version tag. Stopping workflow."
          exit 1

      - name: Install Python
        if: env.is_version == 'true'
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          architecture: 'x64'

      - name: Install requirements
        if: env.is_version == 'true'
        run: |
          pip install -r requirements.txt

      - name: Run PyInstaller
        if: env.is_version == 'true'
        run: |
          pyinstaller --onefile seqsl.py

      - name: Upload Artifact
        if: env.is_version == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: seqsl
          path: dist/seqsl.exe

      - name: Create GitHub Release
        if: env.is_version == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.head_commit.message }}  # Usa el mensaje del commit como nombre de la etiqueta
          release_name: "Release ${{ github.event.head_commit.message }}"
          body: |
            Automated release for version ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: env.is_version == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/seqsl.exe
          asset_name: seqsl.exe
          asset_content_type: application/octet-stream
